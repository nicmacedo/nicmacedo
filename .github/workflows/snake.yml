name: GitHub Snake Game

on:
  schedule:
    - cron: "0 0 * * *"  # Executa diariamente à meia-noite (UTC)
  workflow_dispatch:     # Permite acionamento manual
  push:
    branches:
      - main            # Dispara no push para a branch main

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # Passo 1: Checkout seguro do repositório
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0           # Clona todo o histórico (necessário para o snk)
          token: ${{ secrets.GITHUB_TOKEN }}  # Garante permissões de escrita
          submodules: false        # Desativa submódulos (se não forem necessários)

      # Passo 2: Gera a animação da cobrinha
      - name: Generate Snake Animation
        uses: Platane/snk@v3
        id: generate-snake
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-snake.svg
            dist/github-snake-dark.svg?palette=github-dark
            dist/ocean.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9

      # Passo 3: Configurações extras para evitar erro 128
      - name: Fix Git Permissions
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global --add safe.directory /github/workspace

      # Passo 4: Faz deploy para a branch 'output'
      - name: Deploy to Output Branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: output
          commit_message: "Update snake animation [skip ci]"
